
ProyectoFinalF1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001c  00800200  00000714  00000788  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000714  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000007a4  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000007d4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000b8  00000000  00000000  00000814  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001655  00000000  00000000  000008cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000e65  00000000  00000000  00001f21  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000ad1  00000000  00000000  00002d86  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001b4  00000000  00000000  00003858  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000006ed  00000000  00000000  00003a0c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000009f7  00000000  00000000  000040f9  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000c0  00000000  00000000  00004af0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	86 c0       	rjmp	.+268    	; 0x112 <__bad_interrupt>
   6:	00 00       	nop
   8:	84 c0       	rjmp	.+264    	; 0x112 <__bad_interrupt>
   a:	00 00       	nop
   c:	82 c0       	rjmp	.+260    	; 0x112 <__bad_interrupt>
   e:	00 00       	nop
  10:	80 c0       	rjmp	.+256    	; 0x112 <__bad_interrupt>
  12:	00 00       	nop
  14:	7e c0       	rjmp	.+252    	; 0x112 <__bad_interrupt>
  16:	00 00       	nop
  18:	7c c0       	rjmp	.+248    	; 0x112 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	7a c0       	rjmp	.+244    	; 0x112 <__bad_interrupt>
  1e:	00 00       	nop
  20:	78 c0       	rjmp	.+240    	; 0x112 <__bad_interrupt>
  22:	00 00       	nop
  24:	76 c0       	rjmp	.+236    	; 0x112 <__bad_interrupt>
  26:	00 00       	nop
  28:	74 c0       	rjmp	.+232    	; 0x112 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	72 c0       	rjmp	.+228    	; 0x112 <__bad_interrupt>
  2e:	00 00       	nop
  30:	70 c0       	rjmp	.+224    	; 0x112 <__bad_interrupt>
  32:	00 00       	nop
  34:	6e c0       	rjmp	.+220    	; 0x112 <__bad_interrupt>
  36:	00 00       	nop
  38:	6c c0       	rjmp	.+216    	; 0x112 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	6a c0       	rjmp	.+212    	; 0x112 <__bad_interrupt>
  3e:	00 00       	nop
  40:	68 c0       	rjmp	.+208    	; 0x112 <__bad_interrupt>
  42:	00 00       	nop
  44:	66 c0       	rjmp	.+204    	; 0x112 <__bad_interrupt>
  46:	00 00       	nop
  48:	64 c0       	rjmp	.+200    	; 0x112 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	62 c0       	rjmp	.+196    	; 0x112 <__bad_interrupt>
  4e:	00 00       	nop
  50:	60 c0       	rjmp	.+192    	; 0x112 <__bad_interrupt>
  52:	00 00       	nop
  54:	5e c0       	rjmp	.+188    	; 0x112 <__bad_interrupt>
  56:	00 00       	nop
  58:	5c c0       	rjmp	.+184    	; 0x112 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	5a c0       	rjmp	.+180    	; 0x112 <__bad_interrupt>
  5e:	00 00       	nop
  60:	58 c0       	rjmp	.+176    	; 0x112 <__bad_interrupt>
  62:	00 00       	nop
  64:	56 c0       	rjmp	.+172    	; 0x112 <__bad_interrupt>
  66:	00 00       	nop
  68:	54 c0       	rjmp	.+168    	; 0x112 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	52 c0       	rjmp	.+164    	; 0x112 <__bad_interrupt>
  6e:	00 00       	nop
  70:	50 c0       	rjmp	.+160    	; 0x112 <__bad_interrupt>
  72:	00 00       	nop
  74:	4e c0       	rjmp	.+156    	; 0x112 <__bad_interrupt>
  76:	00 00       	nop
  78:	4c c0       	rjmp	.+152    	; 0x112 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	4a c0       	rjmp	.+148    	; 0x112 <__bad_interrupt>
  7e:	00 00       	nop
  80:	48 c0       	rjmp	.+144    	; 0x112 <__bad_interrupt>
  82:	00 00       	nop
  84:	46 c0       	rjmp	.+140    	; 0x112 <__bad_interrupt>
  86:	00 00       	nop
  88:	44 c0       	rjmp	.+136    	; 0x112 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	42 c0       	rjmp	.+132    	; 0x112 <__bad_interrupt>
  8e:	00 00       	nop
  90:	40 c0       	rjmp	.+128    	; 0x112 <__bad_interrupt>
  92:	00 00       	nop
  94:	3e c0       	rjmp	.+124    	; 0x112 <__bad_interrupt>
  96:	00 00       	nop
  98:	3c c0       	rjmp	.+120    	; 0x112 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	3a c0       	rjmp	.+116    	; 0x112 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	38 c0       	rjmp	.+112    	; 0x112 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	36 c0       	rjmp	.+108    	; 0x112 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	34 c0       	rjmp	.+104    	; 0x112 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	32 c0       	rjmp	.+100    	; 0x112 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	30 c0       	rjmp	.+96     	; 0x112 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	2e c0       	rjmp	.+92     	; 0x112 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	2c c0       	rjmp	.+88     	; 0x112 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	2a c0       	rjmp	.+84     	; 0x112 <__bad_interrupt>
  be:	00 00       	nop
  c0:	28 c0       	rjmp	.+80     	; 0x112 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	26 c0       	rjmp	.+76     	; 0x112 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	24 c0       	rjmp	.+72     	; 0x112 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	22 c0       	rjmp	.+68     	; 0x112 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	20 c0       	rjmp	.+64     	; 0x112 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	1e c0       	rjmp	.+60     	; 0x112 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	1c c0       	rjmp	.+56     	; 0x112 <__bad_interrupt>
  da:	00 00       	nop
  dc:	1a c0       	rjmp	.+52     	; 0x112 <__bad_interrupt>
  de:	00 00       	nop
  e0:	18 c0       	rjmp	.+48     	; 0x112 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	e4 e1       	ldi	r30, 0x14	; 20
  fc:	f7 e0       	ldi	r31, 0x07	; 7
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	ac 31       	cpi	r26, 0x1C	; 28
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>
 10e:	9f d2       	rcall	.+1342   	; 0x64e <main>
 110:	ff c2       	rjmp	.+1534   	; 0x710 <_exit>

00000112 <__bad_interrupt>:
 112:	76 cf       	rjmp	.-276    	; 0x0 <__vectors>

00000114 <toggle_e>:

	if (entrada[ind]!='\0' || modelo[ind]!='\0')
	return false;

	return true;
}
 114:	2a 9a       	sbi	0x05, 2	; 5
 116:	00 c0       	rjmp	.+0      	; 0x118 <toggle_e+0x4>
 118:	2a 98       	cbi	0x05, 2	; 5
 11a:	08 95       	ret

0000011c <lcd_write>:
 11c:	cf 93       	push	r28
 11e:	c8 2f       	mov	r28, r24
 120:	66 23       	and	r22, r22
 122:	11 f0       	breq	.+4      	; 0x128 <lcd_write+0xc>
 124:	28 9a       	sbi	0x05, 0	; 5
 126:	01 c0       	rjmp	.+2      	; 0x12a <lcd_write+0xe>
 128:	28 98       	cbi	0x05, 0	; 5
 12a:	29 98       	cbi	0x05, 1	; 5
 12c:	24 9a       	sbi	0x04, 4	; 4
 12e:	25 9a       	sbi	0x04, 5	; 4
 130:	26 9a       	sbi	0x04, 6	; 4
 132:	27 9a       	sbi	0x04, 7	; 4
 134:	2f 98       	cbi	0x05, 7	; 5
 136:	2e 98       	cbi	0x05, 6	; 5
 138:	2d 98       	cbi	0x05, 5	; 5
 13a:	2c 98       	cbi	0x05, 4	; 5
 13c:	cc 23       	and	r28, r28
 13e:	0c f4       	brge	.+2      	; 0x142 <lcd_write+0x26>
 140:	2f 9a       	sbi	0x05, 7	; 5
 142:	c6 fd       	sbrc	r28, 6
 144:	2e 9a       	sbi	0x05, 6	; 5
 146:	c5 fd       	sbrc	r28, 5
 148:	2d 9a       	sbi	0x05, 5	; 5
 14a:	c4 fd       	sbrc	r28, 4
 14c:	2c 9a       	sbi	0x05, 4	; 5
 14e:	e2 df       	rcall	.-60     	; 0x114 <toggle_e>
 150:	2f 98       	cbi	0x05, 7	; 5
 152:	2e 98       	cbi	0x05, 6	; 5
 154:	2d 98       	cbi	0x05, 5	; 5
 156:	2c 98       	cbi	0x05, 4	; 5
 158:	c3 fd       	sbrc	r28, 3
 15a:	2f 9a       	sbi	0x05, 7	; 5
 15c:	c2 fd       	sbrc	r28, 2
 15e:	2e 9a       	sbi	0x05, 6	; 5
 160:	c1 fd       	sbrc	r28, 1
 162:	2d 9a       	sbi	0x05, 5	; 5
 164:	c0 fd       	sbrc	r28, 0
 166:	2c 9a       	sbi	0x05, 4	; 5
 168:	d5 df       	rcall	.-86     	; 0x114 <toggle_e>
 16a:	2c 9a       	sbi	0x05, 4	; 5
 16c:	2d 9a       	sbi	0x05, 5	; 5
 16e:	2e 9a       	sbi	0x05, 6	; 5
 170:	2f 9a       	sbi	0x05, 7	; 5
 172:	cf 91       	pop	r28
 174:	08 95       	ret

00000176 <lcd_read>:
 176:	88 23       	and	r24, r24
 178:	11 f0       	breq	.+4      	; 0x17e <lcd_read+0x8>
 17a:	28 9a       	sbi	0x05, 0	; 5
 17c:	01 c0       	rjmp	.+2      	; 0x180 <lcd_read+0xa>
 17e:	28 98       	cbi	0x05, 0	; 5
 180:	29 9a       	sbi	0x05, 1	; 5
 182:	24 98       	cbi	0x04, 4	; 4
 184:	25 98       	cbi	0x04, 5	; 4
 186:	26 98       	cbi	0x04, 6	; 4
 188:	27 98       	cbi	0x04, 7	; 4
 18a:	2a 9a       	sbi	0x05, 2	; 5
 18c:	00 c0       	rjmp	.+0      	; 0x18e <lcd_read+0x18>
 18e:	1c 9b       	sbis	0x03, 4	; 3
 190:	02 c0       	rjmp	.+4      	; 0x196 <lcd_read+0x20>
 192:	80 e1       	ldi	r24, 0x10	; 16
 194:	01 c0       	rjmp	.+2      	; 0x198 <lcd_read+0x22>
 196:	80 e0       	ldi	r24, 0x00	; 0
 198:	1d 99       	sbic	0x03, 5	; 3
 19a:	80 62       	ori	r24, 0x20	; 32
 19c:	1e 99       	sbic	0x03, 6	; 3
 19e:	80 64       	ori	r24, 0x40	; 64
 1a0:	1f 99       	sbic	0x03, 7	; 3
 1a2:	80 68       	ori	r24, 0x80	; 128
 1a4:	2a 98       	cbi	0x05, 2	; 5
 1a6:	00 c0       	rjmp	.+0      	; 0x1a8 <lcd_read+0x32>
 1a8:	2a 9a       	sbi	0x05, 2	; 5
 1aa:	00 c0       	rjmp	.+0      	; 0x1ac <lcd_read+0x36>
 1ac:	1c 99       	sbic	0x03, 4	; 3
 1ae:	81 60       	ori	r24, 0x01	; 1
 1b0:	1d 99       	sbic	0x03, 5	; 3
 1b2:	82 60       	ori	r24, 0x02	; 2
 1b4:	1e 99       	sbic	0x03, 6	; 3
 1b6:	84 60       	ori	r24, 0x04	; 4
 1b8:	1f 99       	sbic	0x03, 7	; 3
 1ba:	88 60       	ori	r24, 0x08	; 8
 1bc:	2a 98       	cbi	0x05, 2	; 5
 1be:	08 95       	ret

000001c0 <lcd_waitbusy>:
 1c0:	80 e0       	ldi	r24, 0x00	; 0
 1c2:	d9 df       	rcall	.-78     	; 0x176 <lcd_read>
 1c4:	88 23       	and	r24, r24
 1c6:	e4 f3       	brlt	.-8      	; 0x1c0 <lcd_waitbusy>
 1c8:	88 e0       	ldi	r24, 0x08	; 8
 1ca:	90 e0       	ldi	r25, 0x00	; 0
 1cc:	01 97       	sbiw	r24, 0x01	; 1
 1ce:	f1 f7       	brne	.-4      	; 0x1cc <lcd_waitbusy+0xc>
 1d0:	80 e0       	ldi	r24, 0x00	; 0
 1d2:	d1 cf       	rjmp	.-94     	; 0x176 <lcd_read>
 1d4:	08 95       	ret

000001d6 <lcd_command>:
 1d6:	cf 93       	push	r28
 1d8:	c8 2f       	mov	r28, r24
 1da:	f2 df       	rcall	.-28     	; 0x1c0 <lcd_waitbusy>
 1dc:	60 e0       	ldi	r22, 0x00	; 0
 1de:	8c 2f       	mov	r24, r28
 1e0:	9d df       	rcall	.-198    	; 0x11c <lcd_write>
 1e2:	cf 91       	pop	r28
 1e4:	08 95       	ret

000001e6 <lcd_clrscr>:
 1e6:	81 e0       	ldi	r24, 0x01	; 1
 1e8:	f6 cf       	rjmp	.-20     	; 0x1d6 <lcd_command>
 1ea:	08 95       	ret

000001ec <lcd_home>:
 1ec:	82 e0       	ldi	r24, 0x02	; 2
 1ee:	f3 cf       	rjmp	.-26     	; 0x1d6 <lcd_command>
 1f0:	08 95       	ret

000001f2 <lcd_putc>:
 1f2:	cf 93       	push	r28
 1f4:	c8 2f       	mov	r28, r24
 1f6:	e4 df       	rcall	.-56     	; 0x1c0 <lcd_waitbusy>
 1f8:	ca 30       	cpi	r28, 0x0A	; 10
 1fa:	41 f4       	brne	.+16     	; 0x20c <lcd_putc+0x1a>
 1fc:	80 34       	cpi	r24, 0x40	; 64
 1fe:	10 f0       	brcs	.+4      	; 0x204 <lcd_putc+0x12>
 200:	80 e0       	ldi	r24, 0x00	; 0
 202:	01 c0       	rjmp	.+2      	; 0x206 <lcd_putc+0x14>
 204:	80 e4       	ldi	r24, 0x40	; 64
 206:	80 58       	subi	r24, 0x80	; 128
 208:	e6 df       	rcall	.-52     	; 0x1d6 <lcd_command>
 20a:	03 c0       	rjmp	.+6      	; 0x212 <lcd_putc+0x20>
 20c:	61 e0       	ldi	r22, 0x01	; 1
 20e:	8c 2f       	mov	r24, r28
 210:	85 df       	rcall	.-246    	; 0x11c <lcd_write>
 212:	cf 91       	pop	r28
 214:	08 95       	ret

00000216 <lcd_puts>:
 216:	cf 93       	push	r28
 218:	df 93       	push	r29
 21a:	ec 01       	movw	r28, r24
 21c:	21 96       	adiw	r28, 0x01	; 1
 21e:	fc 01       	movw	r30, r24
 220:	80 81       	ld	r24, Z
 222:	88 23       	and	r24, r24
 224:	21 f0       	breq	.+8      	; 0x22e <lcd_puts+0x18>
 226:	e5 df       	rcall	.-54     	; 0x1f2 <lcd_putc>
 228:	89 91       	ld	r24, Y+
 22a:	81 11       	cpse	r24, r1
 22c:	fc cf       	rjmp	.-8      	; 0x226 <lcd_puts+0x10>
 22e:	df 91       	pop	r29
 230:	cf 91       	pop	r28
 232:	08 95       	ret

00000234 <lcd_init>:
 234:	1f 93       	push	r17
 236:	cf 93       	push	r28
 238:	df 93       	push	r29
 23a:	18 2f       	mov	r17, r24
 23c:	20 9a       	sbi	0x04, 0	; 4
 23e:	21 9a       	sbi	0x04, 1	; 4
 240:	22 9a       	sbi	0x04, 2	; 4
 242:	24 9a       	sbi	0x04, 4	; 4
 244:	25 9a       	sbi	0x04, 5	; 4
 246:	26 9a       	sbi	0x04, 6	; 4
 248:	27 9a       	sbi	0x04, 7	; 4
 24a:	80 e0       	ldi	r24, 0x00	; 0
 24c:	9a ef       	ldi	r25, 0xFA	; 250
 24e:	01 97       	sbiw	r24, 0x01	; 1
 250:	f1 f7       	brne	.-4      	; 0x24e <lcd_init+0x1a>
 252:	2d 9a       	sbi	0x05, 5	; 5
 254:	2c 9a       	sbi	0x05, 4	; 5
 256:	5e df       	rcall	.-324    	; 0x114 <toggle_e>
 258:	80 e0       	ldi	r24, 0x00	; 0
 25a:	9e e4       	ldi	r25, 0x4E	; 78
 25c:	01 97       	sbiw	r24, 0x01	; 1
 25e:	f1 f7       	brne	.-4      	; 0x25c <lcd_init+0x28>
 260:	59 df       	rcall	.-334    	; 0x114 <toggle_e>
 262:	c0 e0       	ldi	r28, 0x00	; 0
 264:	d1 e0       	ldi	r29, 0x01	; 1
 266:	ce 01       	movw	r24, r28
 268:	01 97       	sbiw	r24, 0x01	; 1
 26a:	f1 f7       	brne	.-4      	; 0x268 <lcd_init+0x34>
 26c:	53 df       	rcall	.-346    	; 0x114 <toggle_e>
 26e:	ce 01       	movw	r24, r28
 270:	01 97       	sbiw	r24, 0x01	; 1
 272:	f1 f7       	brne	.-4      	; 0x270 <lcd_init+0x3c>
 274:	2c 98       	cbi	0x05, 4	; 5
 276:	4e df       	rcall	.-356    	; 0x114 <toggle_e>
 278:	21 97       	sbiw	r28, 0x01	; 1
 27a:	f1 f7       	brne	.-4      	; 0x278 <lcd_init+0x44>
 27c:	88 e2       	ldi	r24, 0x28	; 40
 27e:	ab df       	rcall	.-170    	; 0x1d6 <lcd_command>
 280:	88 e0       	ldi	r24, 0x08	; 8
 282:	a9 df       	rcall	.-174    	; 0x1d6 <lcd_command>
 284:	86 e0       	ldi	r24, 0x06	; 6
 286:	a7 df       	rcall	.-178    	; 0x1d6 <lcd_command>
 288:	81 2f       	mov	r24, r17
 28a:	a5 df       	rcall	.-182    	; 0x1d6 <lcd_command>
 28c:	df 91       	pop	r29
 28e:	cf 91       	pop	r28
 290:	1f 91       	pop	r17
 292:	08 95       	ret

00000294 <kbrd_init>:
 294:	38 9a       	sbi	0x07, 0	; 7
 296:	39 9a       	sbi	0x07, 1	; 7
 298:	3a 9a       	sbi	0x07, 2	; 7
 29a:	3b 9a       	sbi	0x07, 3	; 7
 29c:	3c 98       	cbi	0x07, 4	; 7
 29e:	3d 98       	cbi	0x07, 5	; 7
 2a0:	3e 98       	cbi	0x07, 6	; 7
 2a2:	3f 98       	cbi	0x07, 7	; 7
 2a4:	44 9a       	sbi	0x08, 4	; 8
 2a6:	45 9a       	sbi	0x08, 5	; 8
 2a8:	46 9a       	sbi	0x08, 6	; 8
 2aa:	47 9a       	sbi	0x08, 7	; 8
 2ac:	40 9a       	sbi	0x08, 0	; 8
 2ae:	41 9a       	sbi	0x08, 1	; 8
 2b0:	42 9a       	sbi	0x08, 2	; 8
 2b2:	43 9a       	sbi	0x08, 3	; 8
 2b4:	08 95       	ret

000002b6 <activate_column>:
 2b6:	81 11       	cpse	r24, r1
 2b8:	05 c0       	rjmp	.+10     	; 0x2c4 <activate_column+0xe>
 2ba:	40 98       	cbi	0x08, 0	; 8
 2bc:	41 9a       	sbi	0x08, 1	; 8
 2be:	42 9a       	sbi	0x08, 2	; 8
 2c0:	43 9a       	sbi	0x08, 3	; 8
 2c2:	0e c0       	rjmp	.+28     	; 0x2e0 <activate_column+0x2a>
 2c4:	81 30       	cpi	r24, 0x01	; 1
 2c6:	29 f4       	brne	.+10     	; 0x2d2 <activate_column+0x1c>
 2c8:	40 9a       	sbi	0x08, 0	; 8
 2ca:	41 98       	cbi	0x08, 1	; 8
 2cc:	42 9a       	sbi	0x08, 2	; 8
 2ce:	43 9a       	sbi	0x08, 3	; 8
 2d0:	08 95       	ret
 2d2:	82 30       	cpi	r24, 0x02	; 2
 2d4:	29 f4       	brne	.+10     	; 0x2e0 <activate_column+0x2a>
 2d6:	40 9a       	sbi	0x08, 0	; 8
 2d8:	41 9a       	sbi	0x08, 1	; 8
 2da:	42 98       	cbi	0x08, 2	; 8
 2dc:	43 9a       	sbi	0x08, 3	; 8
 2de:	08 95       	ret
 2e0:	83 30       	cpi	r24, 0x03	; 3
 2e2:	21 f4       	brne	.+8      	; 0x2ec <activate_column+0x36>
 2e4:	40 9a       	sbi	0x08, 0	; 8
 2e6:	41 9a       	sbi	0x08, 1	; 8
 2e8:	42 9a       	sbi	0x08, 2	; 8
 2ea:	43 98       	cbi	0x08, 3	; 8
 2ec:	08 95       	ret

000002ee <reset_columns>:
 2ee:	40 9a       	sbi	0x08, 0	; 8
 2f0:	41 9a       	sbi	0x08, 1	; 8
 2f2:	42 9a       	sbi	0x08, 2	; 8
 2f4:	43 9a       	sbi	0x08, 3	; 8
 2f6:	08 95       	ret

000002f8 <kbrd_read>:
 2f8:	cf 93       	push	r28
 2fa:	80 e0       	ldi	r24, 0x00	; 0
 2fc:	dc df       	rcall	.-72     	; 0x2b6 <activate_column>
 2fe:	2f ef       	ldi	r18, 0xFF	; 255
 300:	81 ee       	ldi	r24, 0xE1	; 225
 302:	94 e0       	ldi	r25, 0x04	; 4
 304:	21 50       	subi	r18, 0x01	; 1
 306:	80 40       	sbci	r24, 0x00	; 0
 308:	90 40       	sbci	r25, 0x00	; 0
 30a:	e1 f7       	brne	.-8      	; 0x304 <kbrd_read+0xc>
 30c:	00 c0       	rjmp	.+0      	; 0x30e <kbrd_read+0x16>
 30e:	00 00       	nop
 310:	36 b1       	in	r19, 0x06	; 6
 312:	46 b1       	in	r20, 0x06	; 6
 314:	96 b1       	in	r25, 0x06	; 6
 316:	26 b1       	in	r18, 0x06	; 6
 318:	50 e0       	ldi	r21, 0x00	; 0
 31a:	4f 6d       	ori	r20, 0xDF	; 223
 31c:	5f 6f       	ori	r21, 0xFF	; 255
 31e:	40 95       	com	r20
 320:	50 95       	com	r21
 322:	55 95       	asr	r21
 324:	47 95       	ror	r20
 326:	55 95       	asr	r21
 328:	47 95       	ror	r20
 32a:	55 95       	asr	r21
 32c:	47 95       	ror	r20
 32e:	55 95       	asr	r21
 330:	47 95       	ror	r20
 332:	55 95       	asr	r21
 334:	47 95       	ror	r20
 336:	44 0f       	add	r20, r20
 338:	55 1f       	adc	r21, r21
 33a:	89 2f       	mov	r24, r25
 33c:	90 e0       	ldi	r25, 0x00	; 0
 33e:	8f 6b       	ori	r24, 0xBF	; 191
 340:	9f 6f       	ori	r25, 0xFF	; 255
 342:	80 95       	com	r24
 344:	90 95       	com	r25
 346:	08 2e       	mov	r0, r24
 348:	89 2f       	mov	r24, r25
 34a:	00 0c       	add	r0, r0
 34c:	88 1f       	adc	r24, r24
 34e:	99 0b       	sbc	r25, r25
 350:	00 0c       	add	r0, r0
 352:	88 1f       	adc	r24, r24
 354:	99 1f       	adc	r25, r25
 356:	88 0f       	add	r24, r24
 358:	99 1f       	adc	r25, r25
 35a:	88 0f       	add	r24, r24
 35c:	99 1f       	adc	r25, r25
 35e:	48 2b       	or	r20, r24
 360:	59 2b       	or	r21, r25
 362:	83 2f       	mov	r24, r19
 364:	90 e0       	ldi	r25, 0x00	; 0
 366:	8f 6e       	ori	r24, 0xEF	; 239
 368:	9f 6f       	ori	r25, 0xFF	; 255
 36a:	80 95       	com	r24
 36c:	90 95       	com	r25
 36e:	95 95       	asr	r25
 370:	87 95       	ror	r24
 372:	95 95       	asr	r25
 374:	87 95       	ror	r24
 376:	95 95       	asr	r25
 378:	87 95       	ror	r24
 37a:	95 95       	asr	r25
 37c:	87 95       	ror	r24
 37e:	84 2b       	or	r24, r20
 380:	95 2b       	or	r25, r21
 382:	30 e0       	ldi	r19, 0x00	; 0
 384:	2f 67       	ori	r18, 0x7F	; 127
 386:	3f 6f       	ori	r19, 0xFF	; 255
 388:	20 95       	com	r18
 38a:	30 95       	com	r19
 38c:	22 0f       	add	r18, r18
 38e:	23 2f       	mov	r18, r19
 390:	22 1f       	adc	r18, r18
 392:	33 0b       	sbc	r19, r19
 394:	22 0f       	add	r18, r18
 396:	33 1f       	adc	r19, r19
 398:	22 0f       	add	r18, r18
 39a:	33 1f       	adc	r19, r19
 39c:	22 0f       	add	r18, r18
 39e:	33 1f       	adc	r19, r19
 3a0:	82 2b       	or	r24, r18
 3a2:	93 2b       	or	r25, r19
 3a4:	82 30       	cpi	r24, 0x02	; 2
 3a6:	91 05       	cpc	r25, r1
 3a8:	61 f0       	breq	.+24     	; 0x3c2 <kbrd_read+0xca>
 3aa:	1c f4       	brge	.+6      	; 0x3b2 <kbrd_read+0xba>
 3ac:	01 97       	sbiw	r24, 0x01	; 1
 3ae:	39 f0       	breq	.+14     	; 0x3be <kbrd_read+0xc6>
 3b0:	0e c0       	rjmp	.+28     	; 0x3ce <kbrd_read+0xd6>
 3b2:	84 30       	cpi	r24, 0x04	; 4
 3b4:	91 05       	cpc	r25, r1
 3b6:	39 f0       	breq	.+14     	; 0x3c6 <kbrd_read+0xce>
 3b8:	08 97       	sbiw	r24, 0x08	; 8
 3ba:	39 f0       	breq	.+14     	; 0x3ca <kbrd_read+0xd2>
 3bc:	08 c0       	rjmp	.+16     	; 0x3ce <kbrd_read+0xd6>
 3be:	c1 e3       	ldi	r28, 0x31	; 49
 3c0:	07 c0       	rjmp	.+14     	; 0x3d0 <kbrd_read+0xd8>
 3c2:	c4 e3       	ldi	r28, 0x34	; 52
 3c4:	05 c0       	rjmp	.+10     	; 0x3d0 <kbrd_read+0xd8>
 3c6:	c7 e3       	ldi	r28, 0x37	; 55
 3c8:	03 c0       	rjmp	.+6      	; 0x3d0 <kbrd_read+0xd8>
 3ca:	ca e2       	ldi	r28, 0x2A	; 42
 3cc:	01 c0       	rjmp	.+2      	; 0x3d0 <kbrd_read+0xd8>
 3ce:	c0 e0       	ldi	r28, 0x00	; 0
 3d0:	81 e0       	ldi	r24, 0x01	; 1
 3d2:	71 df       	rcall	.-286    	; 0x2b6 <activate_column>
 3d4:	2f ef       	ldi	r18, 0xFF	; 255
 3d6:	81 ee       	ldi	r24, 0xE1	; 225
 3d8:	94 e0       	ldi	r25, 0x04	; 4
 3da:	21 50       	subi	r18, 0x01	; 1
 3dc:	80 40       	sbci	r24, 0x00	; 0
 3de:	90 40       	sbci	r25, 0x00	; 0
 3e0:	e1 f7       	brne	.-8      	; 0x3da <kbrd_read+0xe2>
 3e2:	00 c0       	rjmp	.+0      	; 0x3e4 <kbrd_read+0xec>
 3e4:	00 00       	nop
 3e6:	36 b1       	in	r19, 0x06	; 6
 3e8:	46 b1       	in	r20, 0x06	; 6
 3ea:	96 b1       	in	r25, 0x06	; 6
 3ec:	26 b1       	in	r18, 0x06	; 6
 3ee:	50 e0       	ldi	r21, 0x00	; 0
 3f0:	4f 6d       	ori	r20, 0xDF	; 223
 3f2:	5f 6f       	ori	r21, 0xFF	; 255
 3f4:	40 95       	com	r20
 3f6:	50 95       	com	r21
 3f8:	55 95       	asr	r21
 3fa:	47 95       	ror	r20
 3fc:	55 95       	asr	r21
 3fe:	47 95       	ror	r20
 400:	55 95       	asr	r21
 402:	47 95       	ror	r20
 404:	55 95       	asr	r21
 406:	47 95       	ror	r20
 408:	55 95       	asr	r21
 40a:	47 95       	ror	r20
 40c:	44 0f       	add	r20, r20
 40e:	55 1f       	adc	r21, r21
 410:	89 2f       	mov	r24, r25
 412:	90 e0       	ldi	r25, 0x00	; 0
 414:	8f 6b       	ori	r24, 0xBF	; 191
 416:	9f 6f       	ori	r25, 0xFF	; 255
 418:	80 95       	com	r24
 41a:	90 95       	com	r25
 41c:	08 2e       	mov	r0, r24
 41e:	89 2f       	mov	r24, r25
 420:	00 0c       	add	r0, r0
 422:	88 1f       	adc	r24, r24
 424:	99 0b       	sbc	r25, r25
 426:	00 0c       	add	r0, r0
 428:	88 1f       	adc	r24, r24
 42a:	99 1f       	adc	r25, r25
 42c:	88 0f       	add	r24, r24
 42e:	99 1f       	adc	r25, r25
 430:	88 0f       	add	r24, r24
 432:	99 1f       	adc	r25, r25
 434:	48 2b       	or	r20, r24
 436:	59 2b       	or	r21, r25
 438:	83 2f       	mov	r24, r19
 43a:	90 e0       	ldi	r25, 0x00	; 0
 43c:	8f 6e       	ori	r24, 0xEF	; 239
 43e:	9f 6f       	ori	r25, 0xFF	; 255
 440:	80 95       	com	r24
 442:	90 95       	com	r25
 444:	95 95       	asr	r25
 446:	87 95       	ror	r24
 448:	95 95       	asr	r25
 44a:	87 95       	ror	r24
 44c:	95 95       	asr	r25
 44e:	87 95       	ror	r24
 450:	95 95       	asr	r25
 452:	87 95       	ror	r24
 454:	84 2b       	or	r24, r20
 456:	95 2b       	or	r25, r21
 458:	30 e0       	ldi	r19, 0x00	; 0
 45a:	2f 67       	ori	r18, 0x7F	; 127
 45c:	3f 6f       	ori	r19, 0xFF	; 255
 45e:	20 95       	com	r18
 460:	30 95       	com	r19
 462:	22 0f       	add	r18, r18
 464:	23 2f       	mov	r18, r19
 466:	22 1f       	adc	r18, r18
 468:	33 0b       	sbc	r19, r19
 46a:	22 0f       	add	r18, r18
 46c:	33 1f       	adc	r19, r19
 46e:	22 0f       	add	r18, r18
 470:	33 1f       	adc	r19, r19
 472:	22 0f       	add	r18, r18
 474:	33 1f       	adc	r19, r19
 476:	82 2b       	or	r24, r18
 478:	93 2b       	or	r25, r19
 47a:	82 30       	cpi	r24, 0x02	; 2
 47c:	91 05       	cpc	r25, r1
 47e:	61 f0       	breq	.+24     	; 0x498 <__LOCK_REGION_LENGTH__+0x98>
 480:	1c f4       	brge	.+6      	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
 482:	01 97       	sbiw	r24, 0x01	; 1
 484:	39 f0       	breq	.+14     	; 0x494 <__LOCK_REGION_LENGTH__+0x94>
 486:	0d c0       	rjmp	.+26     	; 0x4a2 <__LOCK_REGION_LENGTH__+0xa2>
 488:	84 30       	cpi	r24, 0x04	; 4
 48a:	91 05       	cpc	r25, r1
 48c:	39 f0       	breq	.+14     	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
 48e:	08 97       	sbiw	r24, 0x08	; 8
 490:	39 f0       	breq	.+14     	; 0x4a0 <__LOCK_REGION_LENGTH__+0xa0>
 492:	07 c0       	rjmp	.+14     	; 0x4a2 <__LOCK_REGION_LENGTH__+0xa2>
 494:	c2 e3       	ldi	r28, 0x32	; 50
 496:	05 c0       	rjmp	.+10     	; 0x4a2 <__LOCK_REGION_LENGTH__+0xa2>
 498:	c5 e3       	ldi	r28, 0x35	; 53
 49a:	03 c0       	rjmp	.+6      	; 0x4a2 <__LOCK_REGION_LENGTH__+0xa2>
 49c:	c8 e3       	ldi	r28, 0x38	; 56
 49e:	01 c0       	rjmp	.+2      	; 0x4a2 <__LOCK_REGION_LENGTH__+0xa2>
 4a0:	c0 e3       	ldi	r28, 0x30	; 48
 4a2:	82 e0       	ldi	r24, 0x02	; 2
 4a4:	08 df       	rcall	.-496    	; 0x2b6 <activate_column>
 4a6:	2f ef       	ldi	r18, 0xFF	; 255
 4a8:	81 ee       	ldi	r24, 0xE1	; 225
 4aa:	94 e0       	ldi	r25, 0x04	; 4
 4ac:	21 50       	subi	r18, 0x01	; 1
 4ae:	80 40       	sbci	r24, 0x00	; 0
 4b0:	90 40       	sbci	r25, 0x00	; 0
 4b2:	e1 f7       	brne	.-8      	; 0x4ac <__LOCK_REGION_LENGTH__+0xac>
 4b4:	00 c0       	rjmp	.+0      	; 0x4b6 <__LOCK_REGION_LENGTH__+0xb6>
 4b6:	00 00       	nop
 4b8:	36 b1       	in	r19, 0x06	; 6
 4ba:	46 b1       	in	r20, 0x06	; 6
 4bc:	96 b1       	in	r25, 0x06	; 6
 4be:	26 b1       	in	r18, 0x06	; 6
 4c0:	50 e0       	ldi	r21, 0x00	; 0
 4c2:	4f 6d       	ori	r20, 0xDF	; 223
 4c4:	5f 6f       	ori	r21, 0xFF	; 255
 4c6:	40 95       	com	r20
 4c8:	50 95       	com	r21
 4ca:	55 95       	asr	r21
 4cc:	47 95       	ror	r20
 4ce:	55 95       	asr	r21
 4d0:	47 95       	ror	r20
 4d2:	55 95       	asr	r21
 4d4:	47 95       	ror	r20
 4d6:	55 95       	asr	r21
 4d8:	47 95       	ror	r20
 4da:	55 95       	asr	r21
 4dc:	47 95       	ror	r20
 4de:	44 0f       	add	r20, r20
 4e0:	55 1f       	adc	r21, r21
 4e2:	89 2f       	mov	r24, r25
 4e4:	90 e0       	ldi	r25, 0x00	; 0
 4e6:	8f 6b       	ori	r24, 0xBF	; 191
 4e8:	9f 6f       	ori	r25, 0xFF	; 255
 4ea:	80 95       	com	r24
 4ec:	90 95       	com	r25
 4ee:	08 2e       	mov	r0, r24
 4f0:	89 2f       	mov	r24, r25
 4f2:	00 0c       	add	r0, r0
 4f4:	88 1f       	adc	r24, r24
 4f6:	99 0b       	sbc	r25, r25
 4f8:	00 0c       	add	r0, r0
 4fa:	88 1f       	adc	r24, r24
 4fc:	99 1f       	adc	r25, r25
 4fe:	88 0f       	add	r24, r24
 500:	99 1f       	adc	r25, r25
 502:	88 0f       	add	r24, r24
 504:	99 1f       	adc	r25, r25
 506:	48 2b       	or	r20, r24
 508:	59 2b       	or	r21, r25
 50a:	83 2f       	mov	r24, r19
 50c:	90 e0       	ldi	r25, 0x00	; 0
 50e:	8f 6e       	ori	r24, 0xEF	; 239
 510:	9f 6f       	ori	r25, 0xFF	; 255
 512:	80 95       	com	r24
 514:	90 95       	com	r25
 516:	95 95       	asr	r25
 518:	87 95       	ror	r24
 51a:	95 95       	asr	r25
 51c:	87 95       	ror	r24
 51e:	95 95       	asr	r25
 520:	87 95       	ror	r24
 522:	95 95       	asr	r25
 524:	87 95       	ror	r24
 526:	84 2b       	or	r24, r20
 528:	95 2b       	or	r25, r21
 52a:	30 e0       	ldi	r19, 0x00	; 0
 52c:	2f 67       	ori	r18, 0x7F	; 127
 52e:	3f 6f       	ori	r19, 0xFF	; 255
 530:	20 95       	com	r18
 532:	30 95       	com	r19
 534:	22 0f       	add	r18, r18
 536:	23 2f       	mov	r18, r19
 538:	22 1f       	adc	r18, r18
 53a:	33 0b       	sbc	r19, r19
 53c:	22 0f       	add	r18, r18
 53e:	33 1f       	adc	r19, r19
 540:	22 0f       	add	r18, r18
 542:	33 1f       	adc	r19, r19
 544:	22 0f       	add	r18, r18
 546:	33 1f       	adc	r19, r19
 548:	82 2b       	or	r24, r18
 54a:	93 2b       	or	r25, r19
 54c:	82 30       	cpi	r24, 0x02	; 2
 54e:	91 05       	cpc	r25, r1
 550:	61 f0       	breq	.+24     	; 0x56a <__LOCK_REGION_LENGTH__+0x16a>
 552:	1c f4       	brge	.+6      	; 0x55a <__LOCK_REGION_LENGTH__+0x15a>
 554:	01 97       	sbiw	r24, 0x01	; 1
 556:	39 f0       	breq	.+14     	; 0x566 <__LOCK_REGION_LENGTH__+0x166>
 558:	0d c0       	rjmp	.+26     	; 0x574 <__LOCK_REGION_LENGTH__+0x174>
 55a:	84 30       	cpi	r24, 0x04	; 4
 55c:	91 05       	cpc	r25, r1
 55e:	39 f0       	breq	.+14     	; 0x56e <__LOCK_REGION_LENGTH__+0x16e>
 560:	08 97       	sbiw	r24, 0x08	; 8
 562:	39 f0       	breq	.+14     	; 0x572 <__LOCK_REGION_LENGTH__+0x172>
 564:	07 c0       	rjmp	.+14     	; 0x574 <__LOCK_REGION_LENGTH__+0x174>
 566:	c3 e3       	ldi	r28, 0x33	; 51
 568:	05 c0       	rjmp	.+10     	; 0x574 <__LOCK_REGION_LENGTH__+0x174>
 56a:	c6 e3       	ldi	r28, 0x36	; 54
 56c:	03 c0       	rjmp	.+6      	; 0x574 <__LOCK_REGION_LENGTH__+0x174>
 56e:	c9 e3       	ldi	r28, 0x39	; 57
 570:	01 c0       	rjmp	.+2      	; 0x574 <__LOCK_REGION_LENGTH__+0x174>
 572:	c3 e2       	ldi	r28, 0x23	; 35
 574:	83 e0       	ldi	r24, 0x03	; 3
 576:	9f de       	rcall	.-706    	; 0x2b6 <activate_column>
 578:	2f ef       	ldi	r18, 0xFF	; 255
 57a:	81 ee       	ldi	r24, 0xE1	; 225
 57c:	94 e0       	ldi	r25, 0x04	; 4
 57e:	21 50       	subi	r18, 0x01	; 1
 580:	80 40       	sbci	r24, 0x00	; 0
 582:	90 40       	sbci	r25, 0x00	; 0
 584:	e1 f7       	brne	.-8      	; 0x57e <__LOCK_REGION_LENGTH__+0x17e>
 586:	00 c0       	rjmp	.+0      	; 0x588 <__LOCK_REGION_LENGTH__+0x188>
 588:	00 00       	nop
 58a:	36 b1       	in	r19, 0x06	; 6
 58c:	46 b1       	in	r20, 0x06	; 6
 58e:	96 b1       	in	r25, 0x06	; 6
 590:	26 b1       	in	r18, 0x06	; 6
 592:	50 e0       	ldi	r21, 0x00	; 0
 594:	4f 6d       	ori	r20, 0xDF	; 223
 596:	5f 6f       	ori	r21, 0xFF	; 255
 598:	40 95       	com	r20
 59a:	50 95       	com	r21
 59c:	55 95       	asr	r21
 59e:	47 95       	ror	r20
 5a0:	55 95       	asr	r21
 5a2:	47 95       	ror	r20
 5a4:	55 95       	asr	r21
 5a6:	47 95       	ror	r20
 5a8:	55 95       	asr	r21
 5aa:	47 95       	ror	r20
 5ac:	55 95       	asr	r21
 5ae:	47 95       	ror	r20
 5b0:	44 0f       	add	r20, r20
 5b2:	55 1f       	adc	r21, r21
 5b4:	89 2f       	mov	r24, r25
 5b6:	90 e0       	ldi	r25, 0x00	; 0
 5b8:	8f 6b       	ori	r24, 0xBF	; 191
 5ba:	9f 6f       	ori	r25, 0xFF	; 255
 5bc:	80 95       	com	r24
 5be:	90 95       	com	r25
 5c0:	08 2e       	mov	r0, r24
 5c2:	89 2f       	mov	r24, r25
 5c4:	00 0c       	add	r0, r0
 5c6:	88 1f       	adc	r24, r24
 5c8:	99 0b       	sbc	r25, r25
 5ca:	00 0c       	add	r0, r0
 5cc:	88 1f       	adc	r24, r24
 5ce:	99 1f       	adc	r25, r25
 5d0:	88 0f       	add	r24, r24
 5d2:	99 1f       	adc	r25, r25
 5d4:	88 0f       	add	r24, r24
 5d6:	99 1f       	adc	r25, r25
 5d8:	48 2b       	or	r20, r24
 5da:	59 2b       	or	r21, r25
 5dc:	83 2f       	mov	r24, r19
 5de:	90 e0       	ldi	r25, 0x00	; 0
 5e0:	8f 6e       	ori	r24, 0xEF	; 239
 5e2:	9f 6f       	ori	r25, 0xFF	; 255
 5e4:	80 95       	com	r24
 5e6:	90 95       	com	r25
 5e8:	95 95       	asr	r25
 5ea:	87 95       	ror	r24
 5ec:	95 95       	asr	r25
 5ee:	87 95       	ror	r24
 5f0:	95 95       	asr	r25
 5f2:	87 95       	ror	r24
 5f4:	95 95       	asr	r25
 5f6:	87 95       	ror	r24
 5f8:	84 2b       	or	r24, r20
 5fa:	95 2b       	or	r25, r21
 5fc:	30 e0       	ldi	r19, 0x00	; 0
 5fe:	2f 67       	ori	r18, 0x7F	; 127
 600:	3f 6f       	ori	r19, 0xFF	; 255
 602:	20 95       	com	r18
 604:	30 95       	com	r19
 606:	22 0f       	add	r18, r18
 608:	23 2f       	mov	r18, r19
 60a:	22 1f       	adc	r18, r18
 60c:	33 0b       	sbc	r19, r19
 60e:	22 0f       	add	r18, r18
 610:	33 1f       	adc	r19, r19
 612:	22 0f       	add	r18, r18
 614:	33 1f       	adc	r19, r19
 616:	22 0f       	add	r18, r18
 618:	33 1f       	adc	r19, r19
 61a:	82 2b       	or	r24, r18
 61c:	93 2b       	or	r25, r19
 61e:	82 30       	cpi	r24, 0x02	; 2
 620:	91 05       	cpc	r25, r1
 622:	61 f0       	breq	.+24     	; 0x63c <__LOCK_REGION_LENGTH__+0x23c>
 624:	1c f4       	brge	.+6      	; 0x62c <__LOCK_REGION_LENGTH__+0x22c>
 626:	01 97       	sbiw	r24, 0x01	; 1
 628:	39 f0       	breq	.+14     	; 0x638 <__LOCK_REGION_LENGTH__+0x238>
 62a:	0d c0       	rjmp	.+26     	; 0x646 <__LOCK_REGION_LENGTH__+0x246>
 62c:	84 30       	cpi	r24, 0x04	; 4
 62e:	91 05       	cpc	r25, r1
 630:	39 f0       	breq	.+14     	; 0x640 <__LOCK_REGION_LENGTH__+0x240>
 632:	08 97       	sbiw	r24, 0x08	; 8
 634:	39 f0       	breq	.+14     	; 0x644 <__LOCK_REGION_LENGTH__+0x244>
 636:	07 c0       	rjmp	.+14     	; 0x646 <__LOCK_REGION_LENGTH__+0x246>
 638:	cf e2       	ldi	r28, 0x2F	; 47
 63a:	05 c0       	rjmp	.+10     	; 0x646 <__LOCK_REGION_LENGTH__+0x246>
 63c:	c8 e5       	ldi	r28, 0x58	; 88
 63e:	03 c0       	rjmp	.+6      	; 0x646 <__LOCK_REGION_LENGTH__+0x246>
 640:	cd e2       	ldi	r28, 0x2D	; 45
 642:	01 c0       	rjmp	.+2      	; 0x646 <__LOCK_REGION_LENGTH__+0x246>
 644:	cb e2       	ldi	r28, 0x2B	; 43
 646:	53 de       	rcall	.-858    	; 0x2ee <reset_columns>
 648:	8c 2f       	mov	r24, r28
 64a:	cf 91       	pop	r28
 64c:	08 95       	ret

0000064e <main>:
int main(void)
{
 64e:	cf 93       	push	r28
 650:	df 93       	push	r29
 652:	00 d0       	rcall	.+0      	; 0x654 <main+0x6>
 654:	1f 92       	push	r1
 656:	cd b7       	in	r28, 0x3d	; 61
 658:	de b7       	in	r29, 0x3e	; 62
    /* Replace with your application code */
	char key;
	int i;
	lcd_init(LCD_DISP_ON);
 65a:	8c e0       	ldi	r24, 0x0C	; 12
 65c:	eb dd       	rcall	.-1066   	; 0x234 <lcd_init>
	kbrd_init();
 65e:	1a de       	rcall	.-972    	; 0x294 <kbrd_init>
	lcd_home();
 660:	c5 dd       	rcall	.-1142   	; 0x1ec <lcd_home>
 662:	c1 dd       	rcall	.-1150   	; 0x1e6 <lcd_clrscr>
	lcd_clrscr();
 664:	80 e0       	ldi	r24, 0x00	; 0
	lcd_puts("INGRESE CLAVE: ");
 666:	92 e0       	ldi	r25, 0x02	; 2
 668:	d6 dd       	rcall	.-1108   	; 0x216 <lcd_puts>
 66a:	2f ef       	ldi	r18, 0xFF	; 255
 66c:	80 e7       	ldi	r24, 0x70	; 112
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 66e:	92 e0       	ldi	r25, 0x02	; 2
 670:	21 50       	subi	r18, 0x01	; 1
 672:	80 40       	sbci	r24, 0x00	; 0
 674:	90 40       	sbci	r25, 0x00	; 0
 676:	e1 f7       	brne	.-8      	; 0x670 <main+0x22>
 678:	00 c0       	rjmp	.+0      	; 0x67a <main+0x2c>
 67a:	00 00       	nop
 67c:	80 e3       	ldi	r24, 0x30	; 48
 67e:	90 e3       	ldi	r25, 0x30	; 48
	_delay_ms(50);
	char clave[4]= "123";
	char cont[4]="0000";
 680:	9a 83       	std	Y+2, r25	; 0x02
 682:	89 83       	std	Y+1, r24	; 0x01
 684:	9c 83       	std	Y+4, r25	; 0x04
 686:	8b 83       	std	Y+3, r24	; 0x03
 688:	fe 01       	movw	r30, r28
 68a:	31 96       	adiw	r30, 0x01	; 1
 68c:	7f 01       	movw	r14, r30
 68e:	00 ec       	ldi	r16, 0xC0	; 192
	return false;

	return true;
}
int main(void)
{
 690:	33 de       	rcall	.-922    	; 0x2f8 <kbrd_read>
	char clave[4]= "123";
	char cont[4]="0000";
	int x=0;
    while (1) 
    {
		key = kbrd_read();
 692:	18 2f       	mov	r17, r24
 694:	88 23       	and	r24, r24
		if (key != 0)
 696:	e1 f3       	breq	.-8      	; 0x690 <main+0x42>
 698:	80 2f       	mov	r24, r16
#endif
#if LCD_LINES==2
    if ( y==0 ) 
        lcd_command((1<<LCD_DDRAM)+LCD_START_LINE1+x);
    else
        lcd_command((1<<LCD_DDRAM)+LCD_START_LINE2+x);
 69a:	9d dd       	rcall	.-1222   	; 0x1d6 <lcd_command>
 69c:	81 2f       	mov	r24, r17
 69e:	a9 dd       	rcall	.-1198   	; 0x1f2 <lcd_putc>
		{
			lcd_gotoxy(i, 1);
			lcd_putc(key);
 6a0:	f7 01       	movw	r30, r14
 6a2:	11 93       	st	Z+, r17
 6a4:	7f 01       	movw	r14, r30
			cont[i]=  key;
 6a6:	0f 5f       	subi	r16, 0xFF	; 255
 6a8:	03 3c       	cpi	r16, 0xC3	; 195
 6aa:	91 f7       	brne	.-28     	; 0x690 <main+0x42>
 6ac:	89 81       	ldd	r24, Y+1	; 0x01
			
			i++;
			if (i==3)
 6ae:	81 33       	cpi	r24, 0x31	; 49
 6b0:	a1 f4       	brne	.+40     	; 0x6da <main+0x8c>
			{
				if (cont[0] == '1' && cont[1] == '2' && cont[2] == '3')
 6b2:	8a 81       	ldd	r24, Y+2	; 0x02
 6b4:	82 33       	cpi	r24, 0x32	; 50
 6b6:	89 f4       	brne	.+34     	; 0x6da <main+0x8c>
 6b8:	8b 81       	ldd	r24, Y+3	; 0x03
 6ba:	83 33       	cpi	r24, 0x33	; 51
 6bc:	71 f4       	brne	.+28     	; 0x6da <main+0x8c>
 6be:	93 dd       	rcall	.-1242   	; 0x1e6 <lcd_clrscr>
				{
					lcd_clrscr();
 6c0:	82 e1       	ldi	r24, 0x12	; 18
 6c2:	92 e0       	ldi	r25, 0x02	; 2
					lcd_puts("CORRECTO");
 6c4:	a8 dd       	rcall	.-1200   	; 0x216 <lcd_puts>
 6c6:	ff ef       	ldi	r31, 0xFF	; 255
 6c8:	21 ee       	ldi	r18, 0xE1	; 225
 6ca:	84 e0       	ldi	r24, 0x04	; 4
 6cc:	f1 50       	subi	r31, 0x01	; 1
 6ce:	20 40       	sbci	r18, 0x00	; 0
 6d0:	80 40       	sbci	r24, 0x00	; 0
 6d2:	e1 f7       	brne	.-8      	; 0x6cc <main+0x7e>
 6d4:	00 c0       	rjmp	.+0      	; 0x6d6 <main+0x88>
 6d6:	00 00       	nop
 6d8:	0d c0       	rjmp	.+26     	; 0x6f4 <main+0xa6>
 6da:	85 dd       	rcall	.-1270   	; 0x1e6 <lcd_clrscr>
					_delay_ms(100);
				} 
				else
				{
					lcd_clrscr();
 6dc:	80 e1       	ldi	r24, 0x10	; 16
 6de:	92 e0       	ldi	r25, 0x02	; 2
					lcd_puts("INCORRECTO");
 6e0:	9a dd       	rcall	.-1228   	; 0x216 <lcd_puts>
 6e2:	9f ef       	ldi	r25, 0xFF	; 255
 6e4:	e1 ee       	ldi	r30, 0xE1	; 225
 6e6:	f4 e0       	ldi	r31, 0x04	; 4
 6e8:	91 50       	subi	r25, 0x01	; 1
 6ea:	e0 40       	sbci	r30, 0x00	; 0
 6ec:	f0 40       	sbci	r31, 0x00	; 0
 6ee:	e1 f7       	brne	.-8      	; 0x6e8 <main+0x9a>
 6f0:	00 c0       	rjmp	.+0      	; 0x6f2 <main+0xa4>
 6f2:	00 00       	nop
 6f4:	78 dd       	rcall	.-1296   	; 0x1e6 <lcd_clrscr>
					_delay_ms(100);
				}
				
				lcd_clrscr();
 6f6:	80 e0       	ldi	r24, 0x00	; 0
 6f8:	92 e0       	ldi	r25, 0x02	; 2
				lcd_puts("INGRESE CLAVE: ");
 6fa:	8d dd       	rcall	.-1254   	; 0x216 <lcd_puts>
 6fc:	2f ef       	ldi	r18, 0xFF	; 255
 6fe:	80 e7       	ldi	r24, 0x70	; 112
 700:	92 e0       	ldi	r25, 0x02	; 2
 702:	21 50       	subi	r18, 0x01	; 1
 704:	80 40       	sbci	r24, 0x00	; 0
 706:	90 40       	sbci	r25, 0x00	; 0
 708:	e1 f7       	brne	.-8      	; 0x702 <main+0xb4>
 70a:	00 c0       	rjmp	.+0      	; 0x70c <main+0xbe>
 70c:	00 00       	nop
 70e:	bc cf       	rjmp	.-136    	; 0x688 <main+0x3a>

00000710 <_exit>:
 710:	f8 94       	cli

00000712 <__stop_program>:
 712:	ff cf       	rjmp	.-2      	; 0x712 <__stop_program>
